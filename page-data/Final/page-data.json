{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Final","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"final\"\n  }, \"Final\"), mdx(\"h2\", {\n    \"id\": \"final-method\"\n  }, \"Final method\"), mdx(\"p\", null, \"Can't be overridden\"), mdx(\"h2\", {\n    \"id\": \"final-class\"\n  }, \"Final class\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Can't be inherited\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Are all methods final in a final class?\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Class can't be inherited \\u2014 how will you override?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If class is final and abstract \\u2014 it should have static components only\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Doesn't make sense to have instance components if it can't be instantiated or inherited.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"002-java-moc\"\n  }, \"002 Java MOC\"), mdx(\"h2\", {\n    \"id\": \"fundamentals\"\n  }, \"Fundamentals\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic Syntax: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HelloWorld-dot-java\",\n    \"title\": \"HelloWorld dot java\"\n  }, \"[[HelloWorld dot java]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Syntax-Rules\",\n    \"title\": \"Java Syntax Rules\"\n  }, \"[[Java Syntax Rules]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Naming-Conventions\",\n    \"title\": \"Java Naming Conventions\"\n  }, \"[[Java Naming Conventions]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Suffixing-for-Non-default-Primitive-Data-Types\",\n    \"title\": \"Suffixing for Non-default Primitive Data Types\"\n  }, \"[[Suffixing for Non-default Primitive Data Types]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Prefixes-for-Different-Bases\",\n    \"title\": \"Prefixes for Different Bases\"\n  }, \"[[Prefixes for Different Bases]]\"), \" |\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Comments-in-Java\",\n    \"title\": \"Comments in Java\"\n  }, \"[[Comments in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[public static void main(String[] args)]]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data Types: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Primitive-Data-Types-in-Java-and-their-sizes\",\n    \"title\": \"Primitive Data Types in Java and their sizes\"\n  }, \"[[Primitive Data Types in Java and their sizes]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Classes and Objects: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Creating-Objects-in-Java\",\n    \"title\": \"Creating Objects in Java\"\n  }, \"[[Creating Objects in Java]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Using-the-Objects-(through-its-reference-variables)\",\n    \"title\": \"Using the Objects (through its reference variables)\"\n  }, \"[[Using the Objects (through its reference variables)]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Methods: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-is-always-Pass-by-Value\",\n    \"title\": \"Java is always Pass by Value\"\n  }, \"[[Java is always Pass by Value]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"data-types\"\n  }, \"Data Types\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Structured Types  \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arrays: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Defining-Arrays-in-Java\",\n    \"title\": \"Defining Arrays in Java\"\n  }, \"[[Defining Arrays in Java]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Declaring-Arrays-in-Java\",\n    \"title\": \"Declaring Arrays in Java\"\n  }, \"[[Declaring Arrays in Java]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arrays-in-Java-are-Objects\",\n    \"title\": \"Arrays in Java are Objects\"\n  }, \"[[Arrays in Java are Objects]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/String\",\n    \"title\": \"String\"\n  }, \"[[String]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/null-vs-empty-String\",\n    \"title\": \"null vs empty String\"\n  }, \"[[null vs empty String]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/String-Comparison\",\n    \"title\": \"String Comparison\"\n  }, \"[[String Comparison]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/String-Constant-Pool\",\n    \"title\": \"String Constant Pool\"\n  }, \"[[String Constant Pool]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/String-Memory-Management\",\n    \"title\": \"String Memory Management\"\n  }, \"[[String Memory Management]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For mutable Strings: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/StringBuffer\",\n    \"title\": \"StringBuffer\"\n  }, \"[[StringBuffer]]\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/StringBuilder\",\n    \"title\": \"StringBuilder\"\n  }, \"[[StringBuilder]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Wrapper-Classes\",\n    \"title\": \"Wrapper Classes\"\n  }, \"[[Wrapper Classes]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Useful-Methods-of-Wrapper-Classes\",\n    \"title\": \"Useful Methods of Wrapper Classes\"\n  }, \"[[Useful Methods of Wrapper Classes]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Casting\",\n    \"title\": \"Casting\"\n  }, \"[[Casting]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Primitive-Conversion\",\n    \"title\": \"Primitive Conversion\"\n  }, \"[[Primitive Conversion]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Widening-Conversion-in-Java\",\n    \"title\": \"Widening Conversion in Java\"\n  }, \"[[Widening Conversion in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Narrowing-Conversion-in-Java\",\n    \"title\": \"Narrowing Conversion in Java\"\n  }, \"[[Narrowing Conversion in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Boxing-and-Unboxing-conversion\",\n    \"title\": \"Boxing and Unboxing conversion\"\n  }, \"[[Boxing and Unboxing conversion]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/String-Conversion\",\n    \"title\": \"String Conversion\"\n  }, \"[[String Conversion]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Numeric-Promotion\",\n    \"title\": \"Numeric Promotion\"\n  }, \"[[Numeric Promotion]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Object-Type-Conversion\",\n    \"title\": \"Object Type Conversion\"\n  }, \"[[Object Type Conversion]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Upcasting\",\n    \"title\": \"Upcasting\"\n  }, \"[[Upcasting]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Downcasting-in-Java\",\n    \"title\": \"Downcasting in Java\"\n  }, \"[[Downcasting in Java]]\"), \"\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Final\",\n    \"title\": \"Final\"\n  }, \"[[Final]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Final-Member\",\n    \"title\": \"Final Member\"\n  }, \"[[Final Member]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Blank-Final-Variable\",\n    \"title\": \"Blank Final Variable\"\n  }, \"[[Blank Final Variable]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Blank-Static-Final-Variable\",\n    \"title\": \"Blank Static Final Variable\"\n  }, \"[[Blank Static Final Variable]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Immutable-Class\",\n    \"title\": \"Immutable Class\"\n  }, \"[[Immutable Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Enums\",\n    \"title\": \"Java Enums\"\n  }, \"[[Java Enums]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Values-of-an-Enum-and-Constructor-of-Java-Enums\",\n    \"title\": \"Values of an Enum and Constructor of Java Enums\"\n  }, \"[[Values of an Enum and Constructor of Java Enums]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/values()-valuesOf()-ordinal()-Functions-in-Java-Enums\",\n    \"title\": \"values(), valuesOf(), ordinal() Functions in Java Enums\"\n  }, \"[[values(), valuesOf(), ordinal() Functions in Java Enums]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Internal-Code-Generated-by-Compiler-for-Java-Enums\",\n    \"title\": \"Internal Code Generated by Compiler for Java Enums\"\n  }, \"[[Internal Code Generated by Compiler for Java Enums]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Enums-in-Switch-statement\",\n    \"title\": \"Java Enums in Switch statement\"\n  }, \"[[Java Enums in Switch statement]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Enums-and-Classes\",\n    \"title\": \"Java Enums and Classes\"\n  }, \"[[Java Enums and Classes]]\"), \"\")))), mdx(\"h2\", {\n    \"id\": \"oop-in-java\"\n  }, \"OOP in Java\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Inheritance-in-Java\",\n    \"title\": \"Inheritance in Java\"\n  }, \"[[Inheritance in Java]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Inheritance-in-Java-and-default\",\n    \"title\": \"Inheritance in Java and default\"\n  }, \"[[Inheritance in Java and default]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Multiple-Inheritance-not-allowed\",\n    \"title\": \"Multiple Inheritance not allowed\"\n  }, \"[[Multiple Inheritance not allowed]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Encapsulation\",\n    \"title\": \"Encapsulation\"\n  }, \"[[Encapsulation]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/default\",\n    \"title\": \"default\"\n  }, \"[[default]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Covariant-Return-Types\",\n    \"title\": \"Covariant Return Types\"\n  }, \"[[Covariant Return Types]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Static-in-Java\",\n    \"title\": \"Static in Java\"\n  }, \"[[Static in Java]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Static-Blocks\",\n    \"title\": \"Static Blocks\"\n  }, \"[[Static Blocks]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Inner-Class\",\n    \"title\": \"Inner Class\"\n  }, \"[[Inner Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Object-Cloning-in-Java\",\n    \"title\": \"Object Cloning in Java\"\n  }, \"[[Object Cloning in Java]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Cloneable\",\n    \"title\": \"Cloneable\"\n  }, \"[[Cloneable]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/clone()\",\n    \"title\": \"clone()\"\n  }, \"[[clone()]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Instance-Initializer-Block\",\n    \"title\": \"Instance Initializer Block\"\n  }, \"[[Instance Initializer Block]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exception-Handling-with-Method-Overriding\",\n    \"title\": \"Exception Handling with Method Overriding\"\n  }, \"[[Exception Handling with Method Overriding]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Serialization-in-Java\",\n    \"title\": \"Serialization in Java\"\n  }, \"[[Serialization in Java]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Serializable\",\n    \"title\": \"Serializable\"\n  }, \"[[Serializable]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/this-and-super-keyword\",\n    \"title\": \"this and super keyword\"\n  }, \"[[this and super keyword]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"special-classes-in-java\"\n  }, \"Special Classes in Java\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Object-Class\",\n    \"title\": \"Object Class\"\n  }, \"[[Object Class]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Methods-of-Object-Class\",\n    \"title\": \"Methods of Object Class\"\n  }, \"[[Methods of Object Class]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Contract-of-hashcode()-and-equals()-method\",\n    \"title\": \"Contract of hashcode() and equals() method\"\n  }, \"[[Contract of hashcode() and equals() method]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/System-Class\",\n    \"title\": \"System Class\"\n  }, \"[[System Class]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Facilities-provided-by-System-Class\",\n    \"title\": \"Facilities provided by System Class\"\n  }, \"[[Facilities provided by System Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Fields-in-System-Class\",\n    \"title\": \"Fields in System Class\"\n  }, \"[[Fields in System Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Methods-of-System-Class\",\n    \"title\": \"Methods of System Class\"\n  }, \"[[Methods of System Class]]\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/exit()\",\n    \"title\": \"exit()\"\n  }, \"[[exit()]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/gc()\",\n    \"title\": \"gc()\"\n  }, \"[[gc()]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-System-Properties\",\n    \"title\": \"Java System Properties\"\n  }, \"[[Java System Properties]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Environment-Variable-vs-Java-System-Properties\",\n    \"title\": \"Environment Variable vs Java System Properties\"\n  }, \"[[Environment Variable vs Java System Properties]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/System.out.println()\",\n    \"title\": \"System.out.println()\"\n  }, \"[[System.out.println()]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Marker-Interface-in-Java\",\n    \"title\": \"Marker Interface in Java\"\n  }, \"[[Marker Interface in Java]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"exceptions-and-exception-handling\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Exception\",\n    \"title\": \"Exception\"\n  }, \"[[Exception]]\"), \"s and \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Exception-Handling\",\n    \"title\": \"Exception Handling\"\n  }, \"[[Exception Handling]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exception-Handling-Keywords-in-Java\",\n    \"title\": \"Exception Handling Keywords in Java\"\n  }, \"[[Exception Handling Keywords in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Exception-Class-Hierarchy\",\n    \"title\": \"Java Exception Class Hierarchy\"\n  }, \"[[Java Exception Class Hierarchy]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Reasons-and-common-scenarios-for-different-types-of-exception-in-Java\",\n    \"title\": \"Reasons and common scenarios for different types of exception in Java\"\n  }, \"[[Reasons and common scenarios for different types of exception in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Custom-Exceptions-in-Java\",\n    \"title\": \"Custom Exceptions in Java\"\n  }, \"[[Custom Exceptions in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Checked-Exceptions-and-Unchecked-Exceptions-in-Java\",\n    \"title\": \"Checked Exceptions and Unchecked Exceptions in Java\"\n  }, \"[[Checked Exceptions and Unchecked Exceptions in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exception-Propagation\",\n    \"title\": \"Exception Propagation\"\n  }, \"[[Exception Propagation]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exceptions-in-main()-method\",\n    \"title\": \"Exceptions in main() method\"\n  }, \"[[Exceptions in main() method]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exception-Handling-with-Method-Overriding\",\n    \"title\": \"Exception Handling with Method Overriding\"\n  }, \"[[Exception Handling with Method Overriding]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"multithreading-in-java\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Multithreading-in-Java\",\n    \"title\": \"Multithreading in Java\"\n  }, \"[[Multithreading in Java]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Thread-Life-Cycle\",\n    \"title\": \"Java Thread Life Cycle\"\n  }, \"[[Java Thread Life Cycle]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Thread-Scheduler\",\n    \"title\": \"Thread Scheduler\"\n  }, \"[[Thread Scheduler]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ExecutorService\",\n    \"title\": \"ExecutorService\"\n  }, \"[[ExecutorService]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/How-to-make-method-or-block-of-code-thread-safe\",\n    \"title\": \"How to make method or block of code thread safe\"\n  }, \"[[How to make method or block of code thread safe]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Volatile-and-atomic-keywords\",\n    \"title\": \"Volatile & atomic keywords\"\n  }, \"[[Volatile & atomic keywords]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Deadlock-Detection-in-Java\",\n    \"title\": \"Deadlock Detection in Java\"\n  }, \"[[Deadlock Detection in Java]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Deadlock-Prevention-in-Java\",\n    \"title\": \"Deadlock Prevention in Java\"\n  }, \"[[Deadlock Prevention in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Thread-class\",\n    \"title\": \"Thread class\"\n  }, \"[[Thread class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Runnable-Interface\",\n    \"title\": \"Runnable Interface\"\n  }, \"[[Runnable Interface]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Methods-Useful-for-Multithreading\",\n    \"title\": \"Methods Useful for Multithreading\"\n  }, \"[[Methods Useful for Multithreading]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"collections-framework-in-java\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Collections-Framework-in-Java\",\n    \"title\": \"Collections Framework in Java\"\n  }, \"[[Collections Framework in Java]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collections\",\n    \"title\": \"Collections\"\n  }, \"[[Collections]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Utility Classes: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collections-Class\",\n    \"title\": \"Collections Class\"\n  }, \"[[Collections Class]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Arrays-Class\",\n    \"title\": \"Arrays Class\"\n  }, \"[[Arrays Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Size-of-Collection-Objects\",\n    \"title\": \"Size of Collection Objects\"\n  }, \"[[Size of Collection Objects]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collection-Classes-and-Interfaces\",\n    \"title\": \"Collection Classes and Interfaces\"\n  }, \"[[Collection Classes and Interfaces]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Behaviour: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/All-Collection-Classes-implement-Serializable-and-Cloneable\",\n    \"title\": \"All Collection Classes implement Serializable and Cloneable\"\n  }, \"[[All Collection Classes implement Serializable and Cloneable]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Heterogeneous-Objects\",\n    \"title\": \"Heterogeneous Objects\"\n  }, \"[[Heterogeneous Objects]]\"), \" | \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/RandomAccess\",\n    \"title\": \"RandomAccess\"\n  }, \"[[RandomAccess]]\"), \" - link back - don't put here\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Differences:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collections-Class\",\n    \"title\": \"Collections Class\"\n  }, \"[[Collections Class]]\"), \" vs \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Array-vs-ArrayList\",\n    \"title\": \"Array vs ArrayList\"\n  }, \"[[Array vs ArrayList]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HashMap-vs-Hashtable\",\n    \"title\": \"HashMap vs Hashtable\"\n  }, \"[[HashMap vs Hashtable]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ArrayList-and-Vector's-only-Difference\",\n    \"title\": \"ArrayList and Vector's only Difference\"\n  }, \"[[ArrayList and Vector's only Difference]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/size()\",\n    \"title\": \"size()\"\n  }, \"[[size()]]\"), \" vs \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/capacity()\",\n    \"title\": \"capacity()\"\n  }, \"[[capacity()]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Cursor\",\n    \"title\": \"Cursor\"\n  }, \"[[Cursor]]\"), \"s in Java\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Enumeration\",\n    \"title\": \"Enumeration\"\n  }, \"[[Enumeration]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Iterator\",\n    \"title\": \"Iterator\"\n  }, \"[[Iterator]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ListIterator\",\n    \"title\": \"ListIterator\"\n  }, \"[[ListIterator]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Getting-Objects-of-Cursors-in-Java\",\n    \"title\": \"Getting Objects of Cursors in Java\"\n  }, \"[[Getting Objects of Cursors in Java]]\"), \"\")))), mdx(\"h2\", {\n    \"id\": \"java-language-architecture\"\n  }, \"Java Language Architecture\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JDK\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/JVM\",\n    \"title\": \"JVM\"\n  }, \"[[JVM]]\"), \" + Library classes   = \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/JRE\",\n    \"title\": \"JRE\"\n  }, \"[[JRE]]\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/JRE\",\n    \"title\": \"JRE\"\n  }, \"[[JRE]]\"), \" + Development tools = \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/JDK\",\n    \"title\": \"JDK\"\n  }, \"[[JDK]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memory Management\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Program-Execution-in-Java\",\n    \"title\": \"Program Execution in Java\"\n  }, \"[[Program Execution in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Types-of-Memory-in-Java\",\n    \"title\": \"Types of Memory in Java\"\n  }, \"[[Types of Memory in Java]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Implicit-Memory-Management\",\n    \"title\": \"Implicit Memory Management\"\n  }, \"[[Implicit Memory Management]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Garbage-Collection\",\n    \"title\": \"Garbage Collection\"\n  }, \"[[Garbage Collection]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Reachable-Object\",\n    \"title\": \"Reachable Object\"\n  }, \"[[Reachable Object]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Root-Object\",\n    \"title\": \"Root Object\"\n  }, \"[[Root Object]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Why-Java-doesn't-have-pointers\",\n    \"title\": \"Why Java doesn't have pointers\"\n  }, \"[[Why Java doesn't have pointers]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tools-for-Performance-Analysis-in-Java\",\n    \"title\": \"Tools for Performance Analysis in Java\"\n  }, \"[[Tools for Performance Analysis in Java]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"database-access\"\n  }, \"Database Access\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"APIs:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JPA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JD\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/JDBC-Steps\",\n    \"title\": \"JDBC Steps\"\n  }, \"[[JDBC Steps]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PreparedStatement-for-user-input\",\n    \"title\": \"PreparedStatement for user input\"\n  }, \"[[PreparedStatement for user input]]\"), \"\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ORM:\")), mdx(\"h2\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://warp.povusers.org/grrr/java.html\"\n  }, \"Some(read, lot of) hate for Java\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"594d8a74-4ddd-5c73-bc0e-facb31db76a0","fields":{"slug":"/002 Java MOC","title":"002 Java MOC"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"object-oriented-programming-moc\"\n  }, \"Object Oriented Programming MOC\"), mdx(\"h2\", {\n    \"id\": \"entitiescomponents\"\n  }, \"Entities/Components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/f30e6dc82b957fd005108e7423d340e2/Class.md\",\n    \"title\": \"Class\"\n  }, \"Class\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/133b1a75530e8d8017b7b4922c3e1991/Object.md\",\n    \"title\": \"Object\"\n  }, \"Object\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/37a08ba3f5f581b4a4331dff879cfb22/Friend%20Class.md\",\n    \"title\": \"Friend Class\"\n  }, \"Friend Class\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/0cf2a234fd64adcbd51f98267976dfa4/Members%20of%20a%20Class.md\",\n    \"title\": \"Members of a Class\"\n  }, \"Members of a Class\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"four-pillars--one-secret-basement-of-oop\"\n  }, \"Four Pillars + one secret basement of OOP\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/845640eda3514c67160d3099d6c30163/Polymorphism.md\",\n    \"title\": \"Polymorphism\"\n  }, \"Polymorphism\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/dc273c3092363fcefa7e110ae5047531/Inheritance.md\",\n    \"title\": \"Inheritance\"\n  }, \"Inheritance\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/cf97fd81da8b35088ac552875e6ada4a/Encapsulation.md\",\n    \"title\": \"Encapsulation\"\n  }, \"Encapsulation\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/0d417e9148d8dbb16540e61fb7b981b1/Abstraction.md\",\n    \"title\": \"Abstraction\"\n  }, \"Abstraction\"), \"]:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Interface-and-Abstract-Class\",\n    \"title\": \"Interface and Abstract Class\"\n  }, \"[[Interface and Abstract Class]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/How-do-interface-and-abstract-class-achieve-abstraction\",\n    \"title\": \"How do interface and abstract class achieve abstraction\"\n  }, \"[[How do interface and abstract class achieve abstraction]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/When-to-use-interface-and-when-to-use-abstract-class\",\n    \"title\": \"When to use interface and when to use abstract class\"\n  }, \"[[When to use interface and when to use abstract class]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/1e5ebc0fa65d43aa7801bcb97c02e994/Association.md\",\n    \"title\": \"Association\"\n  }, \"Association\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"oop-features\"\n  }, \"OOP Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2d23ba9cd2cb6686adc0fa4cac1c0bdb/Everything%20is%20an%20Object.md\",\n    \"title\": \"Everything is an Object\"\n  }, \"Everything is an Object\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/c32fbb340ce8ac01ac640a1f672cbada/Method%20Overloading.md\",\n    \"title\": \"Method Overloading\"\n  }, \"Method Overloading\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/f75922be6158cde5112b63f0eacf1d36/Method%20Overriding.md\",\n    \"title\": \"Method Overriding\"\n  }, \"Method Overriding\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/f2f10eea4e3de3ce77e462a149c311e7/Static%20Binding.md\",\n    \"title\": \"Static Binding\"\n  }, \"Static Binding\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/aa70e50bf86e49cc20cd2599f12bccc8/Dynamic%20Binding.md\",\n    \"title\": \"Dynamic Binding\"\n  }, \"Dynamic Binding\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/b9a8ff8863713f933b3e1197a93ef18f/Runtime%20Polymorphism%20or%20Dynamic%20Method%20Dispatch.md\",\n    \"title\": \"Runtime Polymorphism or Dynamic Method Dispatch\"\n  }, \"Runtime Polymorphism or Dynamic Method Dispatch\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3a3e0e0dcbf725e754e29324809ba5c4/Shadowing%20or%20Hiding.md\",\n    \"title\": \"Shadowing or Hiding\"\n  }, \"Shadowing or Hiding\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/e99ce9ba06e9e287575a58dc72dba3ce/Subsitutability.md\",\n    \"title\": \"Subsitutability\"\n  }, \"Subsitutability\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/e2754bdb0d5ed4949b07e743aa635b4f/Variance.md\",\n    \"title\": \"Variance\"\n  }, \"Variance\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"types-of-membersclasses\"\n  }, \"Types of members/classes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/ff96a12f267de1bce2358dfff6c8d05b/Static.md\",\n    \"title\": \"Static\"\n  }, \"Static\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/cf79eb7caa7d69396c8bee86e7faf579/Final.md\",\n    \"title\": \"Final\"\n  }, \"Final\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2261a10059feec3be4c1cf1b3b4fdcbe/Abstract.md\",\n    \"title\": \"Abstract\"\n  }, \"Abstract\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"accessingreferring-objects\"\n  }, \"Accessing/referring objects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2249808c81ad5f7001cc34b554a66f56/Self-reference.md\",\n    \"title\": \"Self-reference\"\n  }, \"Self-reference\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5818aa43b39b7c58e03db9de03298a4b/super%20keyword.md\",\n    \"title\": \"super keyword\"\n  }, \"super keyword\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"playing-with-objects\"\n  }, \"Playing with Objects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/bcda27fc8fef79a8c4be3c60fbe81e84/Object%20Cloning.md\",\n    \"title\": \"Object Cloning\"\n  }, \"Object Cloning\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/c55cec16370b44188f7171f68d046759/Object%20Type%20Conversion.md\",\n    \"title\": \"Object Type Conversion\"\n  }, \"Object Type Conversion\"), \"]: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/55623a6d32b3656183fdf47bf48e7d0d/Upcasting.md\",\n    \"title\": \"Upcasting\"\n  }, \"Upcasting\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2776914e52669c5f16a9012ab86fa0c3/Downcasting.md\",\n    \"title\": \"Downcasting\"\n  }, \"Downcasting\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/90b944292ceb659e608380e9414f57dc/Serialization.md\",\n    \"title\": \"Serialization\"\n  }, \"Serialization\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/82e1fb8301d2c8f18dea1d439ec209e3/Deserialization.md\",\n    \"title\": \"Deserialization\"\n  }, \"Deserialization\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"object-oriented-design\"\n  }, \"Object Oriented Design\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/1eab0755ac4c68bebf7fc40a3dfa0bb4/Design%20an%20application%20with%20no%20constraints.md\",\n    \"title\": \"Design an application with no constraints\"\n  }, \"Design an application with no constraints\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/When-to-use-interface-and-when-to-use-abstract-class\",\n    \"title\": \"When to use interface and when to use abstract class\"\n  }, \"[[When to use interface and when to use abstract class]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"35140c21-6fd1-5cfe-8313-c67b2dd98ee1","fields":{"slug":"/001 Object Oriented Programming MOC","title":"Object Oriented Programming MOC"}}}]},"fields":{"slug":"/Final","title":"Final"}}},"pageContext":{"id":"690f087d-090e-5371-86d8-299f6e327607"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}