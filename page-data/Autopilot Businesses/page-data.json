{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Autopilot Businesses","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"autopilot-businesses\"\n  }, \"Autopilot Businesses\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A good CEO is one who does nothing\")), mdx(\"p\", null, \"You can look for businesses that run on autopilot. That is, where the CEO is just for the sake of it, and he/she has to do nothing for the company to keep running. This lessens the chance of human error. And if tomorrow the CEO changes, it won\\u2019t affect the business of the company. For example, Hindustan Unilever. Its products are such that they\\u2019ll keep selling, no matter who the CEO is. On the other hand, Interglobe aviation or Indigo is in profit only because of its management. It is in the airline industry, where most of the airlines are incurring losses. Spicejet fluctuates between profit and loss, Air India is always in loss, Kingfisher airlines went bankrupt. So the problem and irony with Indigo is, it can\\u2019t run on autopilot. It manages to stay in profit only because of the efficient management. Indigo even after being run at its greatest efficiency is able to generate only moderate profits and gives moderate returns. And it can\\u2019t work any better. Also, in case of a sudden accident, it\\u2019ll go into loss. There\\u2019s no saving it. You want a business that can give you great returns even while running on moderate efficiency.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"to-find-a-good-stock\"\n  }, \"To find a good stock\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Autopilot-Businesses\",\n    \"title\": \"Autopilot Businesses\"\n  }, \"[[Autopilot Businesses]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/To-B2B-or-Not-B2B\",\n    \"title\": \"To B2B or Not B2B\"\n  }, \"[[To B2B or Not B2B]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Stalk-Businessmen-to-find-a-good-stock\",\n    \"title\": \"Stalk Businessmen to find a good stock\"\n  }, \"[[Stalk Businessmen to find a good stock]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Value-Investing\",\n    \"title\": \"Value Investing\"\n  }, \"[[Value Investing]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Look-for-temporary-problems-to-find-a-good-stock\",\n    \"title\": \"Look for temporary problems to find a good stock\"\n  }, \"[[Look for temporary problems to find a good stock]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"beaefac6-81a7-51c8-b567-59e559872173","fields":{"slug":"/To find a good stock","title":"To find a good stock"}}}]},"fields":{"slug":"/Autopilot Businesses","title":"Autopilot Businesses"}}},"pageContext":{"id":"9c7d1e2a-b5f6-5105-a8ad-9adaa672de2f"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}