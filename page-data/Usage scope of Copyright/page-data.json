{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Usage scope of Copyright","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"usage-scope-of-copyright\"\n  }, \"Usage scope of Copyright\"), mdx(\"p\", null, \"Getting license once for a particular copyrighted material doesn't mean you can use it everywhere. The authorization is restricted on the basis of territory, stated purpose etc.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"copyright\"\n  }, \"Copyright\"), mdx(\"p\", null, \"Copyright protects original works by authors.\"), mdx(\"p\", null, \"Can be granted for a wide vareity of works -\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Images: Graphics arts, photographs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Software: Source code and binary code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Music\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Videos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text: Documentation, books, articles, blogs, white papers and wikis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recordings: Sound and audiovisual recordings\")), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Copyright-for-Open-Source-Software\",\n    \"title\": \"Copyright for Open Source Software\"\n  }, \"[[Copyright for Open Source Software]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Usage-scope-of-Copyright\",\n    \"title\": \"Usage scope of Copyright\"\n  }, \"[[Usage scope of Copyright]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c4b665d7-6e06-5a3c-9b04-12f3a775e2e5","fields":{"slug":"/Copyright","title":"Copyright"}}}]},"fields":{"slug":"/Usage scope of Copyright","title":"Usage scope of Copyright"}}},"pageContext":{"id":"2979d732-ceea-59f4-b6d0-60f521d84c83"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}