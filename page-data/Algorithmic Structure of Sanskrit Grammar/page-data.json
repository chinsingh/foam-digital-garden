{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Algorithmic Structure of Sanskrit Grammar","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"algorithmic-structure-of-sanskrit-grammar\"\n  }, \"Algorithmic Structure of Sanskrit Grammar\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sanskrit is not dictionary-based language. Usually, if you don't know a word you go through the dictionary and find the meaning. In Sanskrit, all of it can be developed from the sutras mentioned in Panini's \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Ashtadhyayi\",\n    \"title\": \"Ashtadhyayi\"\n  }, \"[[Ashtadhyayi]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Structure of Sanskrit is very similar to that of coding languages\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ashtadhyayi\"\n  }, \"Ashtadhyayi\"), mdx(\"p\", null, \"Ashtadhyayi by Maharishi Panini.\"), mdx(\"p\", null, \"A book in which Maharishi Panini condensed all of Sanskrit within 4000 Sutras. You can use these 4000 Sutras to create any word or sentence in Sanskrit.\"), mdx(\"p\", null, \"It is considered one of the earliest and greatest achievements in Algorithmic Process.\"), mdx(\"p\", null, \"If someone coming from Greece, for example, wants to learn Sanskrit, and no one around knows Greek. Ashtadhyayi laid foundations for him to learn Sanskrit.\"), mdx(\"p\", null, \"The book uses a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Meta-Language\",\n    \"title\": \"Meta Language\"\n  }, \"[[Meta Language]]\"), \" to create an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Algorithmic-Structure-of-Sanskrit-Grammar\",\n    \"title\": \"Algorithmic Structure of Sanskrit Grammar\"\n  }, \"[[Algorithmic Structure of Sanskrit Grammar]]\"), \" so that the language can be formulated out of it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3bdf79d8-9717-59ae-8f20-f127da4cbab8","fields":{"slug":"/Ashtadhyayi","title":"Ashtadhyayi"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ashtadhyayi\"\n  }, \"Ashtadhyayi\"), mdx(\"p\", null, \"Ashtadhyayi by Maharishi Panini.\"), mdx(\"p\", null, \"A book in which Maharishi Panini condensed all of Sanskrit within 4000 Sutras. You can use these 4000 Sutras to create any word or sentence in Sanskrit.\"), mdx(\"p\", null, \"It is considered one of the earliest and greatest achievements in Algorithmic Process.\"), mdx(\"p\", null, \"If someone coming from Greece, for example, wants to learn Sanskrit, and no one around knows Greek. Ashtadhyayi laid foundations for him to learn Sanskrit.\"), mdx(\"p\", null, \"The book uses a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Meta-Language\",\n    \"title\": \"Meta Language\"\n  }, \"[[Meta Language]]\"), \" to create an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Algorithmic-Structure-of-Sanskrit-Grammar\",\n    \"title\": \"Algorithmic Structure of Sanskrit Grammar\"\n  }, \"[[Algorithmic Structure of Sanskrit Grammar]]\"), \" so that the language can be formulated out of it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3bdf79d8-9717-59ae-8f20-f127da4cbab8","fields":{"slug":"/Ashtadhyayi","title":"Ashtadhyayi"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sanskrit-as-an-interface\"\n  }, \"Sanskrit as an Interface\"), mdx(\"p\", null, \"Rick Briggs, A scientist from RIACS, NASA, has written a paper in 1985 titled \\\"Knowledge Representation in Sanskrit and Artificial Intelligence\\\".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Misconception\"), \": NASA claimed Sanskrit is best language for coding. Sanskrit can replace C++ and other high-level languages.\"), mdx(\"p\", null, \"For high-level language, any language can be used. Since eveything is gibberish for a computer. Any high-level language has a set of keywords which can be picked from any language. Eventually, it has to be converted to 0s and 1s.\"), mdx(\"h2\", {\n    \"id\": \"why-sanskrit-is-the-best-language-for-encoding-human-thoughts-in-a-way-a-computer-can-understand\"\n  }, \"Why Sanskrit is the best language for encoding human thoughts in a way a computer can understand?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pure Language\"), \": Languages across the world are no more pure. Each of them have taken some elements from the other. Going back in time, as far as when there were only 2-3 major languages (Sanskrit, Greek, Latin etc).\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Algorithm already in place\"), \": Maharishi Panini's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Ashtadhyayi\",\n    \"title\": \"Ashtadhyayi\"\n  }, \"[[Ashtadhyayi]]\"), \" already encodes Sanskrit. Due to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Algorithmic-Structure-of-Sanskrit-Grammar\",\n    \"title\": \"Algorithmic Structure of Sanskrit Grammar\"\n  }, \"[[Algorithmic Structure of Sanskrit Grammar]]\"), \", it can be derived out of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Meta-Language\",\n    \"title\": \"Meta Language\"\n  }, \"[[Meta Language]]\"), \" and is very similar to the coding languages of today.\"))), mdx(\"h2\", {\n    \"id\": \"examples-mentioned-in-the-paper-and-more-advantages\"\n  }, \"Examples mentioned in the paper and more advantages\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Order-of-Words-don't-matter-in-Sanskrit\",\n    \"title\": \"Order of Words don't matter in Sanskrit\"\n  }, \"[[Order of Words don't matter in Sanskrit]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Each-word-in-Sanskrit-can-carry-multiple-pieces-of-information\",\n    \"title\": \"Each word in Sanskrit can carry multiple pieces of information\"\n  }, \"[[Each word in Sanskrit can carry multiple pieces of information]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Kaarak\",\n    \"title\": \"Kaarak\"\n  }, \"[[Kaarak]]\"), \"s, computer can extract extra information from a sentence while working within a fixed domain.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For example, John gave the ball to Mary.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"library/attachments/2022-11-01-12-16-29.png\",\n    \"alt\": \"Info using kaarak\"\n  }))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"One word can take seven forms using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Vibhakti\",\n    \"title\": \"Vibhakti\"\n  }, \"[[Vibhakti]]\"), \"s as compared to 3-4 forms in other languages.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"748bb703-8bd0-58aa-932b-fda369b1c286","fields":{"slug":"/Sanskrit as an Interface","title":"Sanskrit as an Interface"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"interests-moc\"\n  }, \"Interests MOC\"), mdx(\"h2\", {\n    \"id\": \"trekking\"\n  }, \"Trekking\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/5cf6c4deebfcac53c89e8a4e04757a6a/Packing%20Bagpack.md\",\n    \"title\": \"Packing Bagpack\"\n  }, \"Packing Bagpack\"), \"]\\n[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/1755fdc73e96b17d974d24c966678505/Grip%20Decreases%20with%20Shoe%20Sole%20Firmness.md\",\n    \"title\": \"Grip Decreases with Shoe Sole Firmness\"\n  }, \"Grip Decreases with Shoe Sole Firmness\"), \"]\\n[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/8b320a82cef5aa9747aa51b3b2e76c94/What%20to%20take%20on%20a%20trek.md\",\n    \"title\": \"What to take on a trek\"\n  }, \"What to take on a trek\"), \"]\"), mdx(\"h2\", {\n    \"id\": \"health-and-fitness\"\n  }, \"Health and Fitness\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Workouts - my current [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/98ac3aa8de746b619c2292673f280c2b/Workout%20Routine.md\",\n    \"title\": \"Workout Routine\"\n  }, \"Workout Routine\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/f25f076139e2556f559b53ef190f5812/Beginner%20Gym%20Rings%20Exercises.md\",\n    \"title\": \"Beginner Gym Rings Exercises\"\n  }, \"Beginner Gym Rings Exercises\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"My current [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/d97046c85763a2e5b8ad960d7b29ffe8/Diet.md\",\n    \"title\": \"Diet\"\n  }, \"Diet\"), \"]. Also my [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/da5958d441ee0929c2d25f762676c1f9/Oats%20smoothie.md\",\n    \"title\": \"Oats smoothie Recipe\"\n  }, \"Oats smoothie\"), \"] recipe.\")), mdx(\"h2\", {\n    \"id\": \"social-studies\"\n  }, \"Social Studies\"), mdx(\"h2\", {\n    \"id\": \"graphic-design\"\n  }, \"Graphic Design\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Typography: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Typescale\",\n    \"title\": \"Typescale\"\n  }, \"[[Typescale]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Types of color palletes:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Monochromatic-Pallet\",\n    \"title\": \"Monochromatic Pallet\"\n  }, \"[[Monochromatic Pallet]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Analogous-Pallet\",\n    \"title\": \"Analogous Pallet\"\n  }, \"[[Analogous Pallet]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Complimentary-Pallet\",\n    \"title\": \"Complimentary Pallet\"\n  }, \"[[Complimentary Pallet]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Triadic-Pallet\",\n    \"title\": \"Triadic Pallet\"\n  }, \"[[Triadic Pallet]]\"), \"\")))), mdx(\"h3\", {\n    \"id\": \"economics\"\n  }, \"Economics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/10c1fe2bb9c06308c6d35388c8ef5f19/Quantitative%20Easing%20(QE).md\",\n    \"title\": \"Quantitative Easing (QE)\"\n  }, \"Quantitative Easing (QE)\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/eaaa69fc3685d5ef5548692c4e6bec3f/tapering.md\",\n    \"title\": \"Tapering\"\n  }, \"Tapering\"), \"]\")), mdx(\"h3\", {\n    \"id\": \"linguistics\"\n  }, \"Linguistics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sanskrit\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/38fa1c964549b9a38e8007312c6399cc/Sanskrit%20as%20an%20Interface.md\",\n    \"title\": \"Sanskrit as an Interface\"\n  }, \"Sanskrit as an Interface\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/e6fba8937607b552d292fa0b483da824/Ashtadhyayi.md\",\n    \"title\": \"Ashtadhyayi\"\n  }, \"Ashtadhyayi\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/aee99c7abf9f5230264576fb9058c1bb/Algorithmic%20Structure%20of%20Sanskrit%20Grammar.md\",\n    \"title\": \"Algorithmic Structure of Sanskrit Grammar\"\n  }, \"Algorithmic Structure of Sanskrit Grammar\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/017db87ae9f669d0178550063d1cd663/Order%20of%20Words%20don't%20matter%20in%20Sanskrit.md\",\n    \"title\": \"Order of Words don't matter in Sanskrit\"\n  }, \"Order of Words don't matter in Sanskrit\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/c79c06ac49de3deb4b033c9642a06308/Each%20word%20in%20Sanskrit%20can%20carry%20multiple%20pieces%20of%20information.md\",\n    \"title\": \"Each word in Sanskrit can carry multiple pieces of information\"\n  }, \"Each word in Sanskrit can carry multiple pieces of information\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/05409e41503b947de9fd1d3c701e8e16/Kaarak.md\",\n    \"title\": \"Kaarak\"\n  }, \"Kaarak\"), \"]\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"21cc4c9a-4106-521e-a91a-fb26897ccd59","fields":{"slug":"/400 Interests MOC","title":"Interests MOC"}}}]},"fields":{"slug":"/Algorithmic Structure of Sanskrit Grammar","title":"Algorithmic Structure of Sanskrit Grammar"}}},"pageContext":{"id":"838b618d-8a6a-51af-bc60-53a6efaaf9e9"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}