{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Static Variable","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"static-variable\"\n  }, \"Static Variable\"), mdx(\"h2\", {\n    \"id\": \"use-case\"\n  }, \"Use case\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rarely used other than being declared as constants (final)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"most static variables are declared public since they must be available for users of the class.\")), mdx(\"h2\", {\n    \"id\": \"declaration\"\n  }, \"Declaration\"), mdx(\"p\", null, \"Class variables/static variables declared in a class but outside any method, constructor or block.\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Static-Variables-can't-be-serialized\",\n    \"title\": \"Static Variables can't be serialized\"\n  }, \"[[Static Variables can't be serialized]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"static-variable-cant-be-serialized\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Static-Variable\",\n    \"title\": \"Static Variable\"\n  }, \"[[Static Variable]]\"), \" can't be serialized\"), mdx(\"p\", null, \"If there is a static data member in the class, it will not be serialized as static members belong to the class and not the object.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"4f4daa5a-8c97-50cf-8066-8d808853c03b","fields":{"slug":"/Static Variables can't be serialized","title":"[[Static Variable]] can't be serialized"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"root-object\"\n  }, \"Root Object\"), mdx(\"p\", null, \"An object is a root object if it is referenced by:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A parameter on a call \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Stack-Frame\",\n    \"title\": \"Stack Frame\"\n  }, \"[[Stack Frame]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A local variable on the call \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Stack-Frame\",\n    \"title\": \"Stack Frame\"\n  }, \"[[Stack Frame]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Static-Variable\",\n    \"title\": \"Static Variable\"\n  }, \"[[Static Variable]]\"), \" in class\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Others like \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Class-loader\",\n    \"title\": \"Class loader\"\n  }, \"[[Class loader]]\"), \" or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Java-Native-Interfaces-(JNI)\",\n    \"title\": \"Java Native Interfaces (JNI)\"\n  }, \"[[Java Native Interfaces (JNI)]]\"), \" references\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3184b811-b8db-528c-a58e-37d706ff4ab5","fields":{"slug":"/Root Object","title":"Root Object"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"static\"\n  }, \"Static\"), mdx(\"h2\", {\n    \"id\": \"ownership\"\n  }, \"Ownership\"), mdx(\"p\", null, \"Static members and methods are owned by the class itself, not any object.\"), mdx(\"h2\", {\n    \"id\": \"accessing\"\n  }, \"Accessing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You don't need to create an instance or object to access static members.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  You can access them through class.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Accessing-Static-members-using-objects\",\n    \"title\": \"Accessing Static members using objects\"\n  }, \"[[Accessing Static members using objects]]\"), \"\"))), mdx(\"h2\", {\n    \"id\": \"initialization-in-program-memory\"\n  }, \"Initialization in program memory\"), mdx(\"p\", null, \"Static members are loaded into program memory along with the class. Even before initializing any objects.\"), mdx(\"h2\", {\n    \"id\": \"static-stuff\"\n  }, \"Static stuff\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Static-Variable\",\n    \"title\": \"Static Variable\"\n  }, \"[[Static Variable]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Static-Method\",\n    \"title\": \"Static Method\"\n  }, \"[[Static Method]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"74129eb0-ec7c-543b-90a6-646352220b79","fields":{"slug":"/Static","title":"Static"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"static-variable-cant-be-serialized\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Static-Variable\",\n    \"title\": \"Static Variable\"\n  }, \"[[Static Variable]]\"), \" can't be serialized\"), mdx(\"p\", null, \"If there is a static data member in the class, it will not be serialized as static members belong to the class and not the object.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4f4daa5a-8c97-50cf-8066-8d808853c03b","fields":{"slug":"/Static Variables can't be serialized","title":"[[Static Variable]] can't be serialized"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"static-in-java\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Static\",\n    \"title\": \"Static\"\n  }, \"[[Static]]\"), \" in Java\"), mdx(\"h2\", {\n    \"id\": \"example-of-class-containing-static-members\"\n  }, \"Example of class containing static members\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public class Example\\n{\\nint x; // Instance variable\\nstatic int y; // Static member variable\\n\\npublic void fun() { static int a; } // Instance member function\\npublic static void fun2() { } // Static member function \\n\\nstatic class Test //Static inner class\\n{ }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"static-variables\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Static-Variable\",\n    \"title\": \"Static Variable\"\n  }, \"[[Static Variable]]\"), \"s\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Initialization\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Values can be assigned in special static initializer blocks / \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/static-Blocks\",\n    \"title\": \"static Blocks\"\n  }, \"[[static Blocks]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Accessing\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Accessing outside class - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClassName.VariableName\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Naming\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  When declaring class variables as public static final, then variable names (constants) are all in upper case. If the static variables are not final, the naming syntax is the same as instance and local variables.\"))), mdx(\"h2\", {\n    \"id\": \"static-blocks\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Static-Blocks\",\n    \"title\": \"Static Blocks\"\n  }, \"[[Static Blocks]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"static-methods\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/Static-Method\",\n    \"title\": \"Static Method\"\n  }, \"[[Static Method]]\"), \"s\"), mdx(\"h2\", {\n    \"id\": \"static-class\"\n  }, \"Static class\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Static-Inner-Class\",\n    \"title\": \"Static Inner Class\"\n  }, \"[[Static Inner Class]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"061e5004-60bd-5c1d-a587-390089b739ab","fields":{"slug":"/Static in Java","title":"[[Static]] in Java"}}}]},"fields":{"slug":"/Static Variable","title":"Static Variable"}}},"pageContext":{"id":"4af5386f-cee9-54df-b8ef-6628eaeeae2a"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}