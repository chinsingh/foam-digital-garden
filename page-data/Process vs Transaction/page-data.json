{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Process vs Transaction","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"process-vs-transaction\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Process\",\n    \"title\": \"Process\"\n  }, \"[[Process]]\"), \" vs \", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Transaction\",\n    \"title\": \"Transaction\"\n  }, \"[[Transaction]]\"), \"\"), mdx(\"p\", null, \"Both are a set of instruction but a process is meaningful even if some of it is completed. Meanwhile, a transaction is a process which has no meaning if half of it is completed. It is either completed or failed.\"), mdx(\"p\", null, \"Hence, process is never rolled back completely, but transaction is rolled back completely if it fails.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"process\"\n  }, \"Process\"), mdx(\"p\", null, \"Process is a set of instruction.\"), mdx(\"p\", null, \"May or may not fail, but we don't rollback the entire process.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"14e0ada4-2c3f-5ceb-a109-8074bfe65845","fields":{"slug":"/Process","title":"Process"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"transaction\"\n  }, \"Transaction\"), mdx(\"p\", null, \"Set of instruction which performs some logical work grouped into a single execution unit. If any task fails, the whole transaction fails. Therefore, a transaction is either successful or failure. There is no in between.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"cbbb9136-f766-52fb-92ff-f7b986cbe164","fields":{"slug":"/Transaction","title":"Transaction"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"005-database-engineering-moc\"\n  }, \"005 Database Engineering MOC\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/b1695a78f51345e1c4efe13757ec1867/Relational%20Database.md\",\n    \"title\": \"Relational Database\"\n  }, \"Relational Database\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"transaction-management--database-consistency\"\n  }, \"Transaction Management / Database consistency\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/c10ef028c95d834ad50461bec76c7514/Process.md\",\n    \"title\": \"Process\"\n  }, \"Process\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2ef8dd2d26fcc0d88c719576c9b3bfd8/Transaction.md\",\n    \"title\": \"Transaction\"\n  }, \"Transaction\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/55465b96beb699542e35dec450f0e838/Process%20vs%20Transaction.md\",\n    \"title\": \"Process vs Transaction\"\n  }, \"Process vs Transaction\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/d6bb8b3a39c92001b06f403794aa6e7c/Transaction%20State.md\",\n    \"title\": \"Transaction State\"\n  }, \"Transaction State\"), \"]s\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/92f05ee5a6f44ff3060083bb627fbf11/Transactions%20are%20performed%20on%20buffer.md\",\n    \"title\": \"Transactions are performed on buffer\"\n  }, \"Transactions are performed on buffer\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3d0e84abc2098d0c04fa9b4d36fc3a3a/Result%20of%20Concurrent%20Transactions.md\",\n    \"title\": \"Result of Concurrent Transactions\"\n  }, \"Result of Concurrent Transactions\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/ca6f6ee38096cec2832f84ea3f953c23/Transactions%20maketh%20a%20Database%20consistent.md\",\n    \"title\": \"Transactions maketh a Database consistent\"\n  }, \"Transactions maketh a Database consistent\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5fd76a5ff460db268dbb20eb63d16c68/ACID.md\",\n    \"title\": \"ACID\"\n  }, \"ACID\"), \"]: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/e9e927be170d4b5bc9497624a6241488/Atomicity.md\",\n    \"title\": \"Atomicity\"\n  }, \"Atomicity\"), \"] + [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/60b69b5d4f74da0071e58253de0d8a6f/Consistency.md\",\n    \"title\": \"Consistency\"\n  }, \"Consistency\"), \"] + [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/35cd711bfbf2ac4efbe0a777c3abc8e3/Isolation.md\",\n    \"title\": \"Isolation\"\n  }, \"Isolation\"), \"] + [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5d3b31b6c8a5be36890d76f94594e180/Durability.md\",\n    \"title\": \"Durability\"\n  }, \"Durability\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/276105a806ec731b911d323df5572b02/Dirty%20Read.md\",\n    \"title\": \"Dirty Read\"\n  }, \"Dirty Read\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"data-modelling\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/notes/05a9a7e88f84224a2497a58e8d993fb2/Data%20Modelling.md\",\n    \"title\": \"Data Modelling\"\n  }, \"Data Modelling\"), \"]\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/36af21530fa88d3c095f734e2027c8ad/Normalization.md\",\n    \"title\": \"Normalization\"\n  }, \"Normalization\"), \"] - [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/8152240252889ee7d14fa6003e48c615/First%20Normal%20Form.md\",\n    \"title\": \"1NF\"\n  }, \"First Normal Form\"), \"], [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/af73cae1c598c3ab4ce865d20e7255ac/Second%20Normal%20Form.md\",\n    \"title\": \"2NF\"\n  }, \"Second Normal Form\"), \"], [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/98509ee3cdb38015dad421c3729ddc2e/Third%20Normal%20Form.md\",\n    \"title\": \"Third Normal Form\"\n  }, \"Third Normal Form\"), \"], [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/d26e8ce2483eeadc3d9c5c36e5a9b83d/BCNF.md\",\n    \"title\": \"BCNF\"\n  }, \"BCNF\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"sql\"\n  }, \"SQL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5a1eaed25f0fd2dddabfb7536af71719/Transactions%20in%20SQL.md\",\n    \"title\": \"Transactions in SQL\"\n  }, \"Transactions in SQL\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5ea6fa636393e04845bb267c0776bb55/Orderby%20after%20Groupby.md\",\n    \"title\": \"Orderby after Groupby\"\n  }, \"Orderby after Groupby\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/eb9a5f871ad4a32fae8ac2ebe072e2d2/ACID%20properties%20in%20SQL.md\",\n    \"title\": \"ACID properties in SQL\"\n  }, \"ACID properties in SQL\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Variants: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/OpenSQL\",\n    \"title\": \"OpenSQL\"\n  }, \"[[OpenSQL]]\"), \"\")), mdx(\"h2\", {\n    \"id\": \"searching--optimization\"\n  }, \"Searching / Optimization\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/7429603c37b0e51c6691da22531558ca/Indexing.md\",\n    \"title\": \"Indexing\"\n  }, \"Indexing\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/8c0eca05cf937bbbc3536cde08a0b6fe/Sparse%20Index.md\",\n    \"title\": \"Sparse Indexing\"\n  }, \"Sparse Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/0fdee2d7f1c5095ccb7e190062516214/Dense%20Index.md\",\n    \"title\": \"Dense Indexing\"\n  }, \"Dense Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/0c8ebae30ba73a2ddd772a84da1a41a1/Primary%20Index.md\",\n    \"title\": \"Primary Indexing\"\n  }, \"Primary Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/542f3f3e38d5fdd980864d80e188b743/Clustered%20Index.md\",\n    \"title\": \"Clustered Indexing\"\n  }, \"Clustered Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/fcfc10e6f83dd3b4e895581f2ef08ee7/Secondary%20Index.md\",\n    \"title\": \"Secondary Indexing\"\n  }, \"Secondary Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/49347c166a67226f897570c60c287c2d/Multilevel%20Index.md\",\n    \"title\": \"Multilevel Indexing\"\n  }, \"Multilevel Index\"), \"]ing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/1e51e4437396dbdaf6264af0d3234b67/Index%20tables%20are%20always%20sorted.md\",\n    \"title\": \"Index tables are always sorted\"\n  }, \"Index tables are always sorted\"), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/f998e86aac4fd548de8b33166410c1eb/using%20non-key%20attributes,%20LIKE%20statements%20and%20wildcards.md\",\n    \"title\": \"using non-key attributes, LIKE statements and wildcards\"\n  }, \"using non-key attributes, LIKE statements and wildcards\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3aec20a481edd7397e4b941e1746734a/implicit%20clause%20when%20we%20say%20sorted%20or%20unsorted.md\",\n    \"title\": \"implicit clause when we say sorted or unsorted\"\n  }, \"implicit clause when we say sorted or unsorted\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caching: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Database-Buffer\",\n    \"title\": \"Database Buffer\"\n  }, \"[[Database Buffer]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/9616fb1339ead6dc478cb2726cf7476f/Join.md\",\n    \"title\": \"Joins\"\n  }, \"Join\"), \"]s\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keys\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5fb65afec9bb653558e1b8858bbf23d2/Primary%20Key.md\",\n    \"title\": \"Primary Key\"\n  }, \"Primary Key\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/5570f9115e5c26588428300de0e025bd/Foreign%20Key.md\",\n    \"title\": \"Foreign Key\"\n  }, \"Foreign Key\"), \"] | [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/d1f3f570beb396d2b4ea31d8a20c41c5/Unique%20Key.md\",\n    \"title\": \"Unique Key\"\n  }, \"Unique Key\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/c057a8cc12d04c09fdff451d1dda2ab3/Primary%20Key%20vs%20Unique%20Key.md\",\n    \"title\": \"Primary Key vs Unique Key\"\n  }, \"Primary Key vs Unique Key\"), \"]\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"cfbfec05-a5f6-5f0c-89a0-1b4fbbb49706","fields":{"slug":"/005 Database Engineering MOC","title":"005 Database Engineering MOC"}}}]},"fields":{"slug":"/Process vs Transaction","title":"[[Process]] vs [[Transaction]]"}}},"pageContext":{"id":"0751453c-b26a-5338-b68d-74c55264d712"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}