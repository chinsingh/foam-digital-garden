{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Air Intake Valve","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"air-intake-valve\"\n  }, \"Air Intake Valve\"), mdx(\"p\", null, \"Air enters the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \" through this valve.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cylinder-engine\"\n  }, \"Cylinder (engine)\"), mdx(\"p\", null, \"A cylinder is where combustion and conversion from this chemical to mechanical energy takes place in an engine.\"), mdx(\"p\", null, \"Cylinder has three main components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Piston\",\n    \"title\": \"Piston\"\n  }, \"[[Piston]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Crank Shaft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connecting Valve\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"8ef0b686-4a5f-5ff5-97f3-ce0af31ae882","fields":{"slug":"/Cylinder","title":"Cylinder (engine)"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"engineering-moc\"\n  }, \"Engineering MOC\"), mdx(\"h2\", {\n    \"id\": \"001-computer-science-moc\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/001-Computer-Science-MOC\",\n    \"title\": \"001 Computer Science MOC\"\n  }, \"[[001 Computer Science MOC]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"automobile-engineering\"\n  }, \"Automobile Engineering\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/48b4bf6063eccdb95d1e883c011d1c59/Four%20Stroke.md\",\n    \"title\": \"Four Strokes\"\n  }, \"Four Stroke\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parts of Engine: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3572d837b3030aed6c170f60562b8443/Cylinder.md\",\n    \"title\": \"Cylinder (engine)\"\n  }, \"Cylinder\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fuel Delivery System\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3ae7fe5dcd06b50a3f616cda4d37b787/Air%20Intake%20Valve.md\",\n    \"title\": \"Air Intake Valve\"\n  }, \"Air Intake Valve\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2f660186411b9d49f2022cfe3eced195/Spark%20Ignition%20(Petrol)%20Engine.md\",\n    \"title\": \"Spark Ignition (Petrol) Engine\"\n  }, \"Spark Ignition (Petrol) Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/10a8c06c69141f187ca1da0c8ce5073b/Compression%20Ignition%20(Diesel)%20Engine.md\",\n    \"title\": \"Compression Ignition (Diesel) Engine\"\n  }, \"Compression Ignition (Diesel) Engine\"), \"]\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Types of Internal combustion engines\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On basis of ignition mechanism and fuel type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2f660186411b9d49f2022cfe3eced195/Spark%20Ignition%20(Petrol)%20Engine.md\",\n    \"title\": \"Spark Ignition (Petrol) Engine\"\n  }, \"Spark Ignition (Petrol) Engine\"), \"]\\n[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/bdcba26fd7b68427c2ddf93facec9d16/Turbo%20engine%20is%20more%20powerful,%20NA%20engine%20is%20more%20reliable.md\",\n    \"title\": \"Turbo engine is more powerful, NA engine is more reliable\"\n  }, \"Turbo engine is more powerful, NA engine is more reliable\"), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On basis of aspiration process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/cd1045049e28147514c8e4fb65c67c62/Naturally%20Aspirated%20Engine.md\",\n    \"title\": \"Naturally Aspirated Engine\"\n  }, \"Naturally Aspirated Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/9a8ab8bb0af1874122ea03919cdb31bf/Turbo%20Charged%20Engine.md\",\n    \"title\": \"Turbo Charged Engine\"\n  }, \"Turbo Charged Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/bdcba26fd7b68427c2ddf93facec9d16/Turbo%20engine%20is%20more%20powerful,%20NA%20engine%20is%20more%20reliable.md\",\n    \"title\": \"Turbo engine is more powerful, NA engine is more reliable\"\n  }, \"Turbo engine is more powerful, NA engine is more reliable\"), \"]\")))), mdx(\"h3\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/c/Lesics\"\n  }, \"Lesics - YouTube\"), \" - Engineering (Core)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/playlist?list=PLCIDGVMoyEo-MV0eelvUJdiYNr7CbnjqW\"\n  }, \"ICN Explains Playlist - YouTube\"), \" - Automobile Engineering\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3459da82-260c-5f02-a946-dc996e4cdc8c","fields":{"slug":"/000 Engineering MOC","title":"Engineering MOC"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"fuel-delivery-system\"\n  }, \"Fuel Delivery System\"), mdx(\"p\", null, \"This comprisees of all the components responsible for storing to tranmission of fuel to the engine.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intake Manifold\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Air-Intake-Valve\",\n    \"title\": \"Air Intake Valve\"\n  }, \"[[Air Intake Valve]]\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exhaust-Valve\",\n    \"title\": \"Exhaust Valve\"\n  }, \"[[Exhaust Valve]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Fuel-Injector\",\n    \"title\": \"Fuel Injector\"\n  }, \"[[Fuel Injector]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Spark-Plug\",\n    \"title\": \"Spark Plug\"\n  }, \"[[Spark Plug]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"18d54645-40e8-5c4e-b334-bb32b1e0766d","fields":{"slug":"/Fuel Delivery System","title":"Fuel Delivery System"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"naturally-aspirated-engine\"\n  }, \"Naturally Aspirated Engine\"), mdx(\"p\", null, \"It works on the standard \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/four-stroke\",\n    \"title\": \"four stroke\"\n  }, \"[[four stroke]]\"), \" process.\"), mdx(\"p\", null, \"Air enters and escapes naturally through the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Air-Intake-Valve\",\n    \"title\": \"Air Intake Valve\"\n  }, \"[[Air Intake Valve]]\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Exhaust-Valve\",\n    \"title\": \"Exhaust Valve\"\n  }, \"[[Exhaust Valve]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f3770a0c-bf9b-5f2a-9137-b772cfdcfc1d","fields":{"slug":"/Naturally Aspirated Engine","title":"Naturally Aspirated Engine"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"four-strokes\"\n  }, \"Four Strokes\"), mdx(\"p\", null, \"Four Stokes mean the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Piston\",\n    \"title\": \"Piston\"\n  }, \"[[Piston]]\"), \" moves up and down 4 times to complete one cycle.\"), mdx(\"h2\", {\n    \"id\": \"intake-stroke\"\n  }, \"Intake Stroke\"), mdx(\"p\", null, \"In the first stroke, the piston goes down and lets the air in through the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Air-Intake-Valve\",\n    \"title\": \"Air Intake Valve\"\n  }, \"[[Air Intake Valve]]\"), \".\"), mdx(\"h2\", {\n    \"id\": \"compression-stoke\"\n  }, \"Compression Stoke\"), mdx(\"p\", null, \"The second stroke is when the piston goes up and compresses the air.\"), mdx(\"h2\", {\n    \"id\": \"combustion-stroke\"\n  }, \"Combustion Stroke\"), mdx(\"p\", null, \"Combustion of the fuel in air and hence, expansion which results in the piston moving down.\"), mdx(\"h2\", {\n    \"id\": \"exhaust-stroke\"\n  }, \"Exhaust Stroke\"), mdx(\"p\", null, \"The piston goes up and gases from the combustion process are released through \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Exhaust-Valve\",\n    \"title\": \"Exhaust Valve\"\n  }, \"[[Exhaust Valve]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f8b9cdad-8b1c-571e-a7a5-c2c323b7a1cb","fields":{"slug":"/Four Stroke","title":"Four Strokes"}}}]},"fields":{"slug":"/Air Intake Valve","title":"Air Intake Valve"}}},"pageContext":{"id":"712a4d59-398f-5ad6-8bc3-f2de87f8af41"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}