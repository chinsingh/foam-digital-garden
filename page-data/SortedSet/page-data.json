{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/SortedSet","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sortedset\"\n  }, \"SortedSet\"), mdx(\"p\", null, \"implements \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Set\",\n    \"title\": \"Set\"\n  }, \"[[Set]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Duplicates: NOT allowed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insertion Order: Preserved\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sorting Order: Customizable\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Methods\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- first()\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 first element\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- last()\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 last element\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- headSet(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 elements less than \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- tailSet(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 elements greater than or equal to \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- subSet(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"), \",\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"b\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 elements between \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"), \" and \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"b\"), \" including \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"a\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"- comparator()\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u2192 Comparator object which defines underlying sorting technique\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(If we're using default natural sorting order, then it simply returns null)\")))), mdx(\"p\", null, \"Child classes/interfaces:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/NavigableSet\",\n    \"title\": \"NavigableSet\"\n  }, \"[[NavigableSet]]\"), \" (I)\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"set\"\n  }, \"Set\"), mdx(\"p\", null, \"implements \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Duplicates: NOT allowed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Insertion order: NOT preserved\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"null values: Allows one null value\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  If multiple null values inserted - shows as one, when printed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"No new Methods - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \" methods only\"))), mdx(\"p\", null, \"Child classes/interfaces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HashSet\",\n    \"title\": \"HashSet\"\n  }, \"[[HashSet]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/SortedSet\",\n    \"title\": \"SortedSet\"\n  }, \"[[SortedSet]]\"), \" (I)\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"d1a82c8c-92b5-5493-8f34-90e622b01975","fields":{"slug":"/Set","title":"Set"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"navigableset\"\n  }, \"NavigableSet\"), mdx(\"p\", null, \"implements \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/SortedSet\",\n    \"title\": \"SortedSet\"\n  }, \"[[SortedSet]]\"), \"\"), mdx(\"p\", null, \"Defines several methods for navigation.\"), mdx(\"p\", null, \"Child classes/interfaces:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/TreeSet\",\n    \"title\": \"TreeSet\"\n  }, \"[[TreeSet]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"61bbbcf5-f05e-5570-887b-fe35662e25d1","fields":{"slug":"/NavigableSet","title":"NavigableSet"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"set\"\n  }, \"Set\"), mdx(\"p\", null, \"implements \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Duplicates: NOT allowed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Insertion order: NOT preserved\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"null values: Allows one null value\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  If multiple null values inserted - shows as one, when printed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"No new Methods - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \" methods only\"))), mdx(\"p\", null, \"Child classes/interfaces:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HashSet\",\n    \"title\": \"HashSet\"\n  }, \"[[HashSet]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/SortedSet\",\n    \"title\": \"SortedSet\"\n  }, \"[[SortedSet]]\"), \" (I)\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d1a82c8c-92b5-5493-8f34-90e622b01975","fields":{"slug":"/Set","title":"Set"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"collection-classes-and-interfaces\"\n  }, \"Collection Classes and Interfaces\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"I = Interface\"), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"AC = Abstract Class\"), \"\\nUnderlying Data Structure mentioned beside the classes.\"), mdx(\"p\", null, \"\\uD83D\\uDCA1 Every Collection class is based on some standard data structure.\"), mdx(\"p\", null, \"In order of hierarchy:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Collection\",\n    \"title\": \"Collection\"\n  }, \"[[Collection]]\"), \" (I)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/List\",\n    \"title\": \"List\"\n  }, \"[[List]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ArrayList\",\n    \"title\": \"ArrayList\"\n  }, \"[[ArrayList]]\"), \" - Resizable Array\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/LinkedList\",\n    \"title\": \"LinkedList\"\n  }, \"[[LinkedList]]\"), \" - Doubly Linked List\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Vector\",\n    \"title\": \"Vector\"\n  }, \"[[Vector]]\"), \" - Resizable Array\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Stack\",\n    \"title\": \"Stack\"\n  }, \"[[Stack]]\"), \" - Stack\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Set\",\n    \"title\": \"Set\"\n  }, \"[[Set]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HashSet\",\n    \"title\": \"HashSet\"\n  }, \"[[HashSet]]\"), \" - Hash table\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/LinkedHashSet\",\n    \"title\": \"LinkedHashSet\"\n  }, \"[[LinkedHashSet]]\"), \" - Hash table\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/SortedSet\",\n    \"title\": \"SortedSet\"\n  }, \"[[SortedSet]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/NavigableSet\",\n    \"title\": \"NavigableSet\"\n  }, \"[[NavigableSet]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/TreeSet\",\n    \"title\": \"TreeSet\"\n  }, \"[[TreeSet]]\"), \" -  Balanced Tree\"))))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Queue\",\n    \"title\": \"Queue\"\n  }, \"[[Queue]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PriorityQueue\",\n    \"title\": \"PriorityQueue\"\n  }, \"[[PriorityQueue]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/BlockingQueue\",\n    \"title\": \"BlockingQueue\"\n  }, \"[[BlockingQueue]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PriorityBlockingQueue\",\n    \"title\": \"PriorityBlockingQueue\"\n  }, \"[[PriorityBlockingQueue]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/LinkedBlockingQueue\",\n    \"title\": \"LinkedBlockingQueue\"\n  }, \"[[LinkedBlockingQueue]]\"), \"\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Map\",\n    \"title\": \"Map\"\n  }, \"[[Map]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/HashMap\",\n    \"title\": \"HashMap\"\n  }, \"[[HashMap]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/WeakHashMap\",\n    \"title\": \"WeakHashMap\"\n  }, \"[[WeakHashMap]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/IdentityHashMap\",\n    \"title\": \"IdentityHashMap\"\n  }, \"[[IdentityHashMap]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/SortedMap\",\n    \"title\": \"SortedMap\"\n  }, \"[[SortedMap]]\"), \" (I)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/NavigableMap\",\n    \"title\": \"NavigableMap\"\n  }, \"[[NavigableMap]]\"), \" (I)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/TreeMap\",\n    \"title\": \"TreeMap\"\n  }, \"[[TreeMap]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Hashtable\",\n    \"title\": \"Hashtable\"\n  }, \"[[Hashtable]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Properties\",\n    \"title\": \"Properties\"\n  }, \"[[Properties]]\"), \"\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"566848ad-8929-5c19-882d-67d6c02b30a4","fields":{"slug":"/Collection Classes and Interfaces","title":"Collection Classes and Interfaces"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"navigableset\"\n  }, \"NavigableSet\"), mdx(\"p\", null, \"implements \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/SortedSet\",\n    \"title\": \"SortedSet\"\n  }, \"[[SortedSet]]\"), \"\"), mdx(\"p\", null, \"Defines several methods for navigation.\"), mdx(\"p\", null, \"Child classes/interfaces:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/TreeSet\",\n    \"title\": \"TreeSet\"\n  }, \"[[TreeSet]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"61bbbcf5-f05e-5570-887b-fe35662e25d1","fields":{"slug":"/NavigableSet","title":"NavigableSet"}}}]},"fields":{"slug":"/SortedSet","title":"SortedSet"}}},"pageContext":{"id":"502de2d7-2aa7-5770-b960-6e1b8ab55e9c"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}