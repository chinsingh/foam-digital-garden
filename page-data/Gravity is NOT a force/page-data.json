{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Gravity is NOT a force","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gravity is just a result of object following their \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/geodesic\",\n    \"title\": \"geodesic\"\n  }, \"[[geodesic]]\"), \"s along space-time. And Since \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Matter-Bends-Space\",\n    \"title\": \"Matter Bends Space\"\n  }, \"[[Matter Bends Space]]\"), \" objects curve towards the matter.\"), mdx(\"p\", null, \"Its as it two people start walking straight on their longitudes from equator towards the poles. It would appear as if there's a force pushing the two of them together as they walk towards the pole. But its just them following there path, and the path is merging.\"), mdx(\"h2\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=XRr1kaXKBsU\"\n  }, \"Why Gravity is NOT a Force\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"matter-bends-space\"\n  }, \"Matter bends Space\"), mdx(\"p\", null, \"According to classical mechanics, gravitation is a force. That means, there should be no difference between the acceleration due to gravity and acceleration due to any other force. \"), mdx(\"p\", null, \"An effect of acceleration is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Light-pointed-perpendicular-to-the-direction-of-motion-of-an-accelerating-body-will-bend-wrt-the-body\",\n    \"title\": \"Light pointed perpendicular to the direction of motion of an accelerating body will bend wrt the body\"\n  }, \"[[Light pointed perpendicular to the direction of motion of an accelerating body will bend wrt the body]]\"), \". But this bending of light is not seen on earth.\"), mdx(\"p\", null, \"Or is it? \\uD83D\\uDE0F\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Light-always-takes-the-quickest-path\",\n    \"title\": \"Light always takes the quickest path\"\n  }, \"[[Light always takes the quickest path]]\"), \" but what if this path was curved. Consider earth for instance. To go from New Delhi to New York, you can take the quickest possible path by flight but your path would still be curved since the surface itself was curved.\"), mdx(\"p\", null, \"This is what happens with light. The gravity bends the space according to the mass of the body and thus, although light appears to be travelling in straight line, it goes through a curved path. Since space itself is curved. With respect to space though, light is still travelling in straight line. \"), mdx(\"p\", null, \"Einstein's theory proposed that gravity was not a force, but a result of this interaction of bodies with space. \"), mdx(\"p\", null, \"This was proven by the experiment by Sir Arthur Eddington in 1919 to see if \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Light-bends-when-passing-near-the-sun\",\n    \"title\": \"Light bends when passing near the sun\"\n  }, \"[[Light bends when passing near the sun]]\"), \".\"), mdx(\"p\", null, \"!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Matter_rotating_in_space_time.gif\",\n    \"title\": \"Matter_rotating_in_space_time.gif\"\n  }, \"[[Matter_rotating_in_space_time.gif]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"48ac7755-4c9b-5cb9-b8e0-f6cd035a2e49","fields":{"slug":"/Matter Bends Space","title":"Matter bends Space"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bent-sheet-analogy-for-curved-space-time-is-misleading\"\n  }, \"Bent Sheet Analogy for curved space-time is misleading\"), mdx(\"p\", null, \"The standard bent sheet analogy about curved space-time used almost everywhere to demonstrate curved space-time is  misleading.\"), mdx(\"p\", null, \"It speaks to our intuition of objects falling down. We are inclined to think that since the mass is curving space-time, the other mass it \\\"falling downwards\\\" due to some downward force. But there is no force. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gravity-is-NOT-a-force\",\n    \"title\": \"Gravity is NOT a force\"\n  }, \"[[Gravity is NOT a force]]\"), \".\"), mdx(\"p\", null, \"A better way to think about it will be\\n!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Pasted-image-20220420225931.png\",\n    \"title\": \"Pasted image 20220420225931.png\"\n  }, \"[[Pasted image 20220420225931.png]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.forbes.com/sites/startswithabang/2019/02/16/ask-ethan-how-can-we-measure-the-curvature-of-gravity/?sh=2159f7c134fc\"\n  }, \"Ask Ethan: Is Spacetime Really A Fabric? - Forbes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=XRr1kaXKBsU\"\n  }, \"Why Gravity is NOT a Force\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"0c7da833-0162-5ca6-aaeb-1cf719e2b16b","fields":{"slug":"/Bent Sheet Analogy for curved space-time is misleading","title":"Bent Sheet Analogy for curved space-time is misleading"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The body wouldn't be said to accelerate since, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Matter-Bends-Space\",\n    \"title\": \"Matter Bends Space\"\n  }, \"[[Matter Bends Space]]\"), \" and the body is just following the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/geodesic\",\n    \"title\": \"geodesic\"\n  }, \"[[geodesic]]\"), \" in space.\"), mdx(\"p\", null, \"The free falling object is also doing the same. In classical physics, we would have said, since the object is undergoing \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/acceleration-due-to-gravity\",\n    \"title\": \"acceleration due to gravity\"\n  }, \"[[acceleration due to gravity]]\"), \",  it is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/non-inertial-frame-of-reference\",\n    \"title\": \"non-inertial frame of reference\"\n  }, \"[[non-inertial frame of reference]]\"), \"  and hence the object is experiencing a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/pseudo-force\",\n    \"title\": \"pseudo force\"\n  }, \"[[pseudo force]]\"), \" when free falling which is making it weightless.  But general relativity tells us to consider it from the frame of reference of the body. If the body is not experiencing any net force, it is in an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Inertial-Frame-of-Reference\",\n    \"title\": \"Inertial Frame of Reference\"\n  }, \"[[Inertial Frame of Reference]]\"), \". \"), mdx(\"p\", null, \"We will only call it an acceleration once the body hits the ground and stops.\"), mdx(\"p\", null, \"Depending on where you look from, you can call this a result of or a proof that \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gravity-is-NOT-a-force\",\n    \"title\": \"Gravity is NOT a force\"\n  }, \"[[Gravity is NOT a force]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1f9b425a-6dad-5c85-9949-9d83846f037c","fields":{"slug":"/Free falling bodies are not accelerating","title":"Free falling bodies are not accelerating"}}}]},"fields":{"slug":"/Gravity is NOT a force","title":"Gravity is NOT a force"}}},"pageContext":{"id":"ba6a2057-b846-54ad-90a9-39ca3989f14d"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}