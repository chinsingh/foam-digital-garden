{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Cylinder","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cylinder-engine\"\n  }, \"Cylinder (engine)\"), mdx(\"p\", null, \"A cylinder is where combustion and conversion from this chemical to mechanical energy takes place in an engine.\"), mdx(\"p\", null, \"Cylinder has three main components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Piston\",\n    \"title\": \"Piston\"\n  }, \"[[Piston]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Crank Shaft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connecting Valve\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"piston\"\n  }, \"piston\"), mdx(\"p\", null, \"The piston converts energy from combustion into translational energy.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"bf773d83-22a6-5f6e-9090-20036918c2b6","fields":{"slug":"/Piston","title":"piston"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"engineering-moc\"\n  }, \"Engineering MOC\"), mdx(\"h2\", {\n    \"id\": \"001-computer-science-moc\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"/001-Computer-Science-MOC\",\n    \"title\": \"001 Computer Science MOC\"\n  }, \"[[001 Computer Science MOC]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"automobile-engineering\"\n  }, \"Automobile Engineering\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/48b4bf6063eccdb95d1e883c011d1c59/Four%20Stroke.md\",\n    \"title\": \"Four Strokes\"\n  }, \"Four Stroke\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parts of Engine: [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3572d837b3030aed6c170f60562b8443/Cylinder.md\",\n    \"title\": \"Cylinder (engine)\"\n  }, \"Cylinder\"), \"]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fuel Delivery System\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/3ae7fe5dcd06b50a3f616cda4d37b787/Air%20Intake%20Valve.md\",\n    \"title\": \"Air Intake Valve\"\n  }, \"Air Intake Valve\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2f660186411b9d49f2022cfe3eced195/Spark%20Ignition%20(Petrol)%20Engine.md\",\n    \"title\": \"Spark Ignition (Petrol) Engine\"\n  }, \"Spark Ignition (Petrol) Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/10a8c06c69141f187ca1da0c8ce5073b/Compression%20Ignition%20(Diesel)%20Engine.md\",\n    \"title\": \"Compression Ignition (Diesel) Engine\"\n  }, \"Compression Ignition (Diesel) Engine\"), \"]\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Types of Internal combustion engines\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On basis of ignition mechanism and fuel type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/2f660186411b9d49f2022cfe3eced195/Spark%20Ignition%20(Petrol)%20Engine.md\",\n    \"title\": \"Spark Ignition (Petrol) Engine\"\n  }, \"Spark Ignition (Petrol) Engine\"), \"]\\n[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/bdcba26fd7b68427c2ddf93facec9d16/Turbo%20engine%20is%20more%20powerful,%20NA%20engine%20is%20more%20reliable.md\",\n    \"title\": \"Turbo engine is more powerful, NA engine is more reliable\"\n  }, \"Turbo engine is more powerful, NA engine is more reliable\"), \"]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On basis of aspiration process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/cd1045049e28147514c8e4fb65c67c62/Naturally%20Aspirated%20Engine.md\",\n    \"title\": \"Naturally Aspirated Engine\"\n  }, \"Naturally Aspirated Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/9a8ab8bb0af1874122ea03919cdb31bf/Turbo%20Charged%20Engine.md\",\n    \"title\": \"Turbo Charged Engine\"\n  }, \"Turbo Charged Engine\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/notes/bdcba26fd7b68427c2ddf93facec9d16/Turbo%20engine%20is%20more%20powerful,%20NA%20engine%20is%20more%20reliable.md\",\n    \"title\": \"Turbo engine is more powerful, NA engine is more reliable\"\n  }, \"Turbo engine is more powerful, NA engine is more reliable\"), \"]\")))), mdx(\"h3\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/c/Lesics\"\n  }, \"Lesics - YouTube\"), \" - Engineering (Core)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/playlist?list=PLCIDGVMoyEo-MV0eelvUJdiYNr7CbnjqW\"\n  }, \"ICN Explains Playlist - YouTube\"), \" - Automobile Engineering\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3459da82-260c-5f02-a946-dc996e4cdc8c","fields":{"slug":"/000 Engineering MOC","title":"Engineering MOC"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"fuel-injector\"\n  }, \"Fuel Injector\"), mdx(\"p\", null, \"Injects the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \" with fuel.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f785992e-5cf6-5924-abb3-9046c462b024","fields":{"slug":"/Fuel Injector","title":"Fuel Injector"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"exhaust-valve\"\n  }, \"Exhaust Valve\"), mdx(\"p\", null, \"Gases escape the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \" through this valve.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"72efd30b-0f96-5ac6-af3f-da659a733390","fields":{"slug":"/Exhaust Valve","title":"Exhaust Valve"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"spark-ignition-petrol-engine\"\n  }, \"Spark Ignition (Petrol) Engine\"), mdx(\"p\", null, \"Standard \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Four-Stroke\",\n    \"title\": \"Four Stroke\"\n  }, \"[[Four Stroke]]\"), \" with the following additions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Intake Stroke\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Fuel-Injector\",\n    \"title\": \"Fuel Injector\"\n  }, \"[[Fuel Injector]]\"), \" injects fuel along with the air.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Combustion Stroke\"), \": Spark Ignition uses \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Spark-Plug\",\n    \"title\": \"Spark Plug\"\n  }, \"[[Spark Plug]]\"), \" to trigger combustion in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \", hence the name.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f47ad966-73b7-5475-a4a4-8dfb3ae8373f","fields":{"slug":"/Spark Ignition (Petrol) Engine","title":"Spark Ignition (Petrol) Engine"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"air-intake-valve\"\n  }, \"Air Intake Valve\"), mdx(\"p\", null, \"Air enters the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \" through this valve.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"712a4d59-398f-5ad6-8bc3-f2de87f8af41","fields":{"slug":"/Air Intake Valve","title":"Air Intake Valve"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"compression-ignition-diesel-engine\"\n  }, \"Compression Ignition (Diesel) Engine\"), mdx(\"p\", null, \"Standard \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Four-Stroke\",\n    \"title\": \"Four Stroke\"\n  }, \"[[Four Stroke]]\"), \" with the following additions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Compression Stroke\"), \": The air is compressed to such an extent that even contact with fuel will light it up, hence the name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Combustion Stroke\"), \": Fuel is injected through the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Fuel-Injector\",\n    \"title\": \"Fuel Injector\"\n  }, \"[[Fuel Injector]]\"), \" to trigger combustion in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1562e05e-38c2-505e-8d54-465eea78c811","fields":{"slug":"/Compression Ignition (Diesel) Engine","title":"Compression Ignition (Diesel) Engine"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"spark-plug\"\n  }, \"Spark Plug\"), mdx(\"p\", null, \"Its a small 'lighter' in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Cylinder\",\n    \"title\": \"Cylinder\"\n  }, \"[[Cylinder]]\"), \" of the engine which is responsible for combustion in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Spark-Ignition-(Petrol)-Engine\",\n    \"title\": \"Spark Ignition (Petrol) Engine\"\n  }, \"[[Spark Ignition (Petrol) Engine]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b50f18ab-d0f5-5d56-acc9-13473b4d931e","fields":{"slug":"/Spark Plug","title":"Spark Plug"}}}]},"fields":{"slug":"/Cylinder","title":"Cylinder (engine)"}}},"pageContext":{"id":"8ef0b686-4a5f-5ff5-97f3-ce0af31ae882"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}