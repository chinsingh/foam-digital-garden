{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Cap on Fund Management Charge","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cap-on-fund-management-charge\"\n  }, \"Cap on Fund Management Charge\"), mdx(\"p\", null, \"1.35% max\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ulips-charges-returns-and-comparison-with-mutual-fund\"\n  }, \"ULIPs charges, returns and comparison with \", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"/Mutual-Fund\",\n    \"title\": \"Mutual Fund\"\n  }, \"[[Mutual Fund]]\"), \"\"), mdx(\"h2\", {\n    \"id\": \"charges\"\n  }, \"Charges\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Mutual Funds\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ULIP\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Expense-Ratio\",\n    \"title\": \"Expense Ratio\"\n  }, \"[[Expense Ratio]]\"), \"\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"~Premium Allocation (discontinued)~\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Exit-Load\",\n    \"title\": \"Exit Load\"\n  }, \"[[Exit Load]]\"), \"\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"~Policy Administration (discontinued)~\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fund Management charge (\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Expense-Ratio\",\n    \"title\": \"Expense Ratio\"\n  }, \"[[Expense Ratio]]\"), \")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Cap-on-Fund-Management-Charge\",\n    \"title\": \"Cap on Fund Management Charge\"\n  }, \"[[Cap on Fund Management Charge]]\"), \"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fund Switching Charge: If you feel like your fund is not doing well and you want to switch, for instance from large cap to small cap \\u2014 you will have to pay. - Some companies nowadays allow switching 1-2 times for free.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Premium Redirection charge\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Policy Surrender: If you want to close the policy and get your money back\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Discontinuance-charge-(DC)\",\n    \"title\": \"Discontinuance charge (DC)\"\n  }, \"[[Discontinuance charge (DC)]]\"), \"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/Mortality-Charge\",\n    \"title\": \"Mortality Charge\"\n  }, \"[[Mortality Charge]]\"), \"\")))), mdx(\"h2\", {\n    \"id\": \"returns\"\n  }, \"Returns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The structure might be similar to mutual funds, but it can't give the same returns since there are so many charges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you're investing some amount and 10-11 % is deducted as charges, even if a ULIP manages to give 11% annual return, you're back to the same amount \\u21D2 0% profit.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ULIPs' returns do not beat mutual funds' return.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c92a4d23-6e02-5699-a035-e7e498f30321","fields":{"slug":"/ULIPs charges, returns and comparison with Mutual Funds","title":"ULIPs charges, returns and comparison with [[Mutual Fund]]"}}}]},"fields":{"slug":"/Cap on Fund Management Charge","title":"Cap on Fund Management Charge"}}},"pageContext":{"id":"f0141658-f148-5f67-b298-ac70121683e8"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}